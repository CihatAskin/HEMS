CREATE TABLE [dbo].[Product_Category](
	[Product_Category_Code] [varchar](50) NOT NULL,
	[Seq_Id] [int] IDENTITY(1,1) NOT NULL,
	[Category_Name] [varchar](50) NOT NULL,
	[Category_Description] [varchar](50) NULL,
	[Status] [varchar](50) NOT NULL,
	[Create_Date] [datetime] NOT NULL,
	[Update_Date] [datetime] NULL,
	[Is_Deleted] [bit] NOT NULL,
 CONSTRAINT [PK_Product_Category_1] PRIMARY KEY CLUSTERED 
(
	[Product_Category_Code] ASC
))

Revision => 
Select Top 0 * into Product_Category_Revision from Product_Category

********************************************************************
create or alter procedure sp_category_insert

@Code  varchar(50),
@Name  varchar(50),
@Description  varchar(50),
@Status  varchar(50),
@CreatedAt datetime,
@Id int output
as
begin

INSERT INTO [dbo].[Product_Category]
           ([Product_Category_Code]
           ,[Category_Name]
           ,[Category_Description]
           ,[Status]
           ,[Create_Date]
           ,[Is_Deleted])
     VALUES
           (@Code 
           ,@Name
           ,@Description
           ,@Status 
           ,@CreatedAt 
           ,0   );
set @Id =SCOPE_IDENTITY();
return @Id;
end


*******************************************************************
create or alter procedure sp_category_get_all

as
begin

SELECT [Product_Category_Code] as Code
      ,[Seq_Id] as Id
      ,[Category_Name] as Name
      ,[Category_Description] as Description
      ,[Status] as Status
      ,[Create_Date] as CreatedAt
      ,[Update_Date] as UpdatedAt
      ,[Is_Deleted] as IsDeleted
  FROM [dbo].[Product_Category] with (nolock)
WHERE Is_Deleted =0

end
*******************************************************************

create or alter procedure sp_category_get_by_id

@Id int
as
begin

SELECT [Product_Category_Code] as Code
      ,[Seq_Id] as Id
      ,[Category_Name] as Name
      ,[Category_Description] as Description
      ,[Status] as Status
      ,[Create_Date] as CreatedAt
      ,[Update_Date] as UpdatedAt
      ,[Is_Deleted] as IsDeleted
  FROM [dbo].[Product_Category] with (nolock)
  WHERE [Seq_Id] =@Id
end

******************************************************************
create or alter procedure sp_category_update

@Id int,
@Name  varchar(50),
@Description  varchar(50),
@Status  varchar(50),
@UpdatedAt datetime

as
begin

insert into Product_Category_Revision SELECT [Product_Category_Code]
 
      ,[Category_Name]
      ,[Category_Description]
      ,[Status]
      ,[Create_Date]
      ,[Update_Date]
      ,[Is_Deleted]
  FROM [dbo].[Product_Category] where Seq_Id=@Id

UPDATE [dbo].[Product_Category]
   SET [Category_Name] = @Name
      ,[Category_Description] = @Description
      ,[Status] = @Status 
      ,[Update_Date] = @UpdatedAt
      ,[Is_Deleted]=0
 WHERE Seq_Id=@Id 
end
*******************************************************************
create or alter  procedure [dbo].[sp_category_insert_or_revive]

@Code  varchar(50),
@Name  varchar(50),
@Description  varchar(50),
@Status  varchar(50),
@CreatedAt datetime,
@Id int output
as
begin

set @Id=( Select Seq_Id from [Product_Category] where Product_Category_Code =@Code );

IF @Id is not null 
exec sp_category_update @Id,@Name,@Description,@Status,@CreatedAt;

ELSE 
BEGIN  
exec sp_category_insert @Code,@Name ,@Description,@Status ,@CreatedAt,@Id output;
END 

return @Id;
end


*******************************************************************
create or alter procedure sp_category_delete

@Id int,
@UpdatedAt datetime
as
begin

insert into Product_Category_Revision SELECT [Product_Category_Code]
 
      ,[Category_Name]
      ,[Category_Description]
      ,[Status]
      ,[Create_Date]
      ,[Update_Date]
      ,[Is_Deleted]
  FROM [dbo].[Product_Category] where Seq_Id=@Id

UPDATE [dbo].[Product_Category]
   SET [Is_Deleted] = 1
      ,[Update_Date] = @UpdatedAt
 WHERE Seq_Id=@Id 
end
*********************************************************************
create or alter procedure sp_category_is_exist

@Code varchar(50)
as
begin

SELECT 1 FROM Product_Category WHERE Product_Category_Code = @Code AND Is_Deleted=0;

end
